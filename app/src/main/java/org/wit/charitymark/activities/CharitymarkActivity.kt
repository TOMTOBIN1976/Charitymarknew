package org.wit.charitymark.activities

import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.view.Menu
import android.view.MenuItem
import com.google.android.material.snackbar.Snackbar
import org.wit.charitymark.R
import org.wit.charitymark.databinding.ActivityCharitymarkBinding
import org.wit.charitymark.main.MainApp
import org.wit.charitymark.models.CharitymarkModel
import timber.log.Timber
import timber.log.Timber.i

class CharitymarkActivity : AppCompatActivity() {
    // ActivityCharitymarkBinding class is an autogenerated class
    // Import to access the View objects on layout (activity_charitymark.xml).
    private lateinit var binding: ActivityCharitymarkBinding
    // creating a charitymark as a class member (used in event handler btnAdd.setOnClickListener)
    var charitymark = CharitymarkModel()
    lateinit var app: MainApp

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        // inflate our layout using this binding class
        binding = ActivityCharitymarkBinding.inflate(layoutInflater)
        setContentView(binding.root)
        // Enable toolbar (for cancelling a charity event before adding)
        binding.toolbarAdd.title = title
        setSupportActionBar(binding.toolbarAdd)

        app = application as MainApp
        i("Charitymark Activity started.")
        // bind to the Button
        binding.btnAdd.setOnClickListener() {
            charitymark.title = binding.charitymarkTitle.text.toString()
            charitymark.description = binding.description.text.toString()
            if (charitymark.title.isNotEmpty()) {
                //app.charitymarks.add(charitymark.copy())
                app.charitymarks.create(charitymark.copy())
                //i("add Button Pressed: ${charitymark}")
                //for (i in app.charitymarks.indices) {
                //    i("Placemark[$i]:${this.app.charitymarks[i]}")
                //}
               // finish() the activity - and set a result code
                // end CharitymarkActivity - and update the List view.
                setResult(RESULT_OK)
                finish()
            }
            else {
                Snackbar.make(it,"Please Enter a title", Snackbar.LENGTH_LONG)
                    .show()
            }
        }
    }
    // inflate the menu_charitymark to display CANCEL menu on
    override fun onCreateOptionsMenu(menu: Menu): Boolean {
        menuInflater.inflate(R.menu.menu_charitymark, menu)
        return super.onCreateOptionsMenu(menu)
    }
    // handle the menu CANCEL event with this method
    override fun onOptionsItemSelected(item: MenuItem): Boolean {
        when (item.itemId) {
            R.id.item_cancel -> {
                finish()
            }
        }
        return super.onOptionsItemSelected(item)
    }
}